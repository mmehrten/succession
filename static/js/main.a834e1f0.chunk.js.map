{"version":3,"sources":["Util.tsx","PlayAudio.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["getFQPath","file","process","PlayAudio","props","state","audio","Audio","imagePath","playAudio","play","setState","callback","pauseAudio","text","variant","pause","path","mp3Path","size","id","src","this","onClick","className","alt","Button","React","Component","App","Math","floor","random","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAO,SAASA,EAAUC,GACtB,MAAOC,eAA+BD,E,WCiD3BE,E,kDAxCb,WAAYC,GAAa,IAAD,uBACtB,cAAMA,IANRA,MAAa,GAKW,EAJxBC,MAAa,GAIW,EAHxBC,MAA0B,IAAIC,MAGN,EAFxBC,UAAoB,GAEI,EAUxBC,UAAY,WACV,EAAKH,MAAMI,OACX,EAAKC,SAAS,CACZC,SAAU,EAAKC,WACfC,KAAM,QACNC,QAAS,eAfW,EAmBxBF,WAAa,WACX,EAAKP,MAAMU,QACX,EAAKL,SAAS,CACZC,SAAU,EAAKH,UACfK,KAAM,OACNC,QAAS,aArBX,EAAKX,MAAQA,EACb,IAAIa,EAAOjB,EAAUI,EAAMc,SAJL,OAKtB,EAAKV,UAAYR,EAAUI,EAAMI,WACjC,EAAKF,MAAQ,IAAIC,MAAMU,GACvB,EAAKZ,MAAQ,CAACO,SAAU,EAAKH,UAAWK,KAAM,OAAQC,QAAS,UAAWI,KAAM,MAP1D,E,0CA4BxB,WACE,OACI,sBAAKC,GAAG,YAAR,UACE,qBAAKC,IAAKC,KAAKd,UAAWe,QAASD,KAAKjB,MAAMO,SAAUY,UAAU,YAAYC,IAAI,kBAClF,uBACA,uBACA,cAACC,EAAA,EAAD,CAAQH,QAASD,KAAKjB,MAAMO,SAAUG,QAASO,KAAKjB,MAAMU,QAASI,KAAMG,KAAKjB,MAAMc,KAApF,SAA2FG,KAAKjB,MAAMS,c,GAxCxFa,IAAMC,WCkBfC,EAhBO,WACpB,IAAIrB,EAAY,YAAcsB,KAAKC,MAAsB,IAAhBD,KAAKE,UAH7B,GAG4D,OAE7E,OACE,sBAAKR,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAWN,QAAQ,iBAAiBV,UAAWA,MAEjD,yBAAQgB,UAAU,aAAlB,UACE,mBAAGS,KAAK,yCAAR,8BACA,mDAAqB,mBAAGA,KAAK,qCAAR,6CCJdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a834e1f0.chunk.js","sourcesContent":["export function getFQPath(file: string) {\n    return process.env.PUBLIC_URL + '/' + file;\n}","import React from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport {getFQPath} from \"./Util\";\n\nclass PlayAudio extends React.Component {\n  props: any = {};\n  state: any = {};\n  audio: HTMLAudioElement = new Audio();\n  imagePath: string = \"\";\n\n  constructor(props: any) {\n    super(props);\n\n    this.props = props;\n    let path = getFQPath(props.mp3Path);\n    this.imagePath = getFQPath(props.imagePath);\n    this.audio = new Audio(path);\n    this.state = {callback: this.playAudio, text: 'Play', variant: \"primary\", size: \"lg\"};\n  }\n\n  playAudio = () => {\n    this.audio.play();\n    this.setState({\n      callback: this.pauseAudio,\n      text: \"Pause\",\n      variant: \"secondary\",\n    });\n  }\n\n  pauseAudio = () => {\n    this.audio.pause();\n    this.setState({\n      callback: this.playAudio,\n      text: \"Play\",\n      variant: \"primary\",\n    });\n  }\n\n  render() {\n    return (\n        <div id=\"playAudio\">\n          <img src={this.imagePath} onClick={this.state.callback} className=\"img-fluid\" alt=\"NoContextJoke\" />\n          <br/>\n          <br/>\n          <Button onClick={this.state.callback} variant={this.state.variant} size={this.state.size}>{this.state.text}</Button>\n        </div>\n    );\n  }\n}\n\nexport default PlayAudio;","import './App.css';\nimport PlayAudio from './PlayAudio';\nimport React from 'react';\n\nconst imageCount = 30;\n\nconst App: React.FC = () => {\n  let imagePath = \"image/suc\" + Math.floor(Math.random() * 100) % imageCount + \".png\";\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PlayAudio mp3Path=\"succession.mp3\" imagePath={imagePath} />\n      </header>\n      <footer className=\"App-footer\">\n        <a href=\"https://github.com/mmehrten/succession\">Project Homepage</a>\n        <div>All images from <a href=\"https://twitter.com/nocontextroyco\">no context succession</a></div> \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}